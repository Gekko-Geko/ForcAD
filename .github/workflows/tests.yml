name: tests
on:
  push:
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - "static/**"
  pull_request:
    branches:
      - main

jobs:
  tests:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-18.04
        test_type:
          - BLITZ
          - CLASSIC

    runs-on: ${{ matrix.os }}
    env:
      TEST: 1
      TEST_TYPE: ${{ matrix.test_type }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'

      - name: Setup tests
        run: python tests/setup_forcad.py
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pip install -r backend/requirements.txt
      - name: Setup ForcAD
        run: ./control.py setup
      - name: Build ForcAD
        run: ./control.py build

      - name: Start & run tests
        run: |
          export $(find ./docker_config -name "*.env" -exec egrep -v '^#' {} \; | xargs)
          ./control.py start
          python tests/wait_for_start.py
          ./control.py rd -c "ps"
          env | sort
          python -m unittest discover -v -s tests

      - name: Show logs
        if: ${{ failure() }}
        run: ./control.py rd -c "logs -f --tail 2000"

  backend_linter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          black: true
          flake8: true

  frontend_linter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node 13
        uses: actions/setup-node@v2
        with:
          node-version: '13'
      - name: Install dependencies
        working-directory: front
        run: yarn install

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint: true
          prettier: true
          eslint_dir: front/src
          prettier_dir: front/src
