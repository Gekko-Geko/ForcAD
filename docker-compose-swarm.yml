version: '3.7'

volumes:
  front_build:
  database:

services:
  celery:
    image: ${FORCAD_REGISTRY}/forcad_celery:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=worker
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    restart: on-failure

  celerybeat:
    image: ${FORCAD_REGISTRY}/forcad_celerybeat:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=beat
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    restart: on-failure

  flower:
    image: ${FORCAD_REGISTRY}/forcad_flower:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=flower
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/celery/flower.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    restart: on-failure


  initializer:
    image: ${FORCAD_REGISTRY}/forcad_initializer:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/initializer/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    restart: on-failure

  webapi:
    image: ${FORCAD_REGISTRY}/forcad_webapi:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/webapi/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    restart: on-failure
    tty: true

  socat_flag_submitter:
    image: ${FORCAD_REGISTRY}/forcad_tcp_flag_submitter:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/socat_flag_submitter/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env
    ports:
      - 31337:31337
    restart: on-failure
    tty: true

  nginx:
    image: ${FORCAD_REGISTRY}/forcad_nginx:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/nginx/Dockerfile
    volumes:
      - front_build:/front_build
    ports:
      - 8080:80
    restart: on-failure
    deploy:
      placement:
        constraints:
          - node.labels.external == 1

  redis:
    image: redis:5.0.7-alpine
    command: ["sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD"]
    restart: on-failure
    sysctls:
      net.core.somaxconn: 1024
    env_file:
      - ./docker_config/redis/environment.env

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.2-alpine
    env_file:
      - ./docker_config/rabbitmq/environment.env
    restart: "no"

  postgres:
    image: postgres:12.2
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure
    deploy:
      placement:
        constraints:
          - node.labels.db == 1
